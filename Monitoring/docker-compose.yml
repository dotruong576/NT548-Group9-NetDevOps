services:
#prometheus
  prometheus:
    # image: prom/prometheus
    build:
      context: .
      dockerfile: DockerfilePrometheus
    user: root
    ports:
      - "9090:9090"
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alert-rules:/etc/prometheus/rules
    # command:
    #   - --config.file=/etc/prometheus/prometheus.yml
    #   - --storage.tsdb.retention.time=15d
    #   - --storage.tsdb.path=data/
    networks:
      - monitoring

#snmp-exporter
  snmp-exporter:
    # image: prom/snmp-exporter
    build:
      context: .
      dockerfile: DockerfileSNMP-Exporter
    user: root
    ports:
      - "9116:9116"
    volumes:
      - ./snmp-exporter/snmp.yml:/etc/snmp-exporter/snmp.yml
    networks:
      - monitoring

#alert-manager
  alert-manager:
    # image: prom/alertmanager
    build:
      context: .
      dockerfile: DockerfileAlertManager
    user: root
    ports:
      - "9093:9093"
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./alertmanager:/etc/alertmanager
    # command:
    #   - --config.file=/etc/alertmanager/alertmanager.yml
    networks:
      - monitoring

#grafana    
  grafana:
    # image: grafana/grafana
    build: 
      context: .
      dockerfile: DockerfileGrafana
    user: root
    ports:
      - "3000:3000"
    environment:
      - GF_INSTALL_PLUGINS=alexanderzobnin-zabbix-app
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./grafana/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    env_file:
      - .grafana.secret
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge